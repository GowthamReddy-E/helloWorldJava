pipeline {
    agent any

    environment {
        MAVEN_HOME = '/opt/apache-maven-*'
        PATH = "${MAVEN_HOME}/bin:${env.PATH}"
        JFROG_URL = 'https://gowthamreddy.jfrog.io/artifactory/'
        JFROG_REPO = 'docker-trial'
        OTHER_SERVER_URL = 'root@192.168.17.130:/home/jenkinsWorlspace'
    }

    stages {
        stage('Clean') {
            steps {
                sh "mvn clean"
            }
        }

        stage('Test') {
            steps {
                sh "mvn test"
            }          
        }

        stage('Deploy') {
            steps {
                sh "mvn deploy"
            }
        }

        stage('Publish to JFrog') {
            steps {
                script {
                    def server = Artifactory.server 'browserArtifactory' // Replace with the configured Artifactory server ID
                    def buildInfo = Artifactory.newBuildInfo()

                    // Set the Artifactory server URL and repository details
                    buildInfo.env.capture = true
                    buildInfo.env.artifactoryUrl = 'https://gowthamreddy.jfrog.io/artifactory/' // Replace with your JFrog Artifactory URL
                    buildInfo.env.artifactoryRepo = 'your-repository' // Replace with your JFrog repository name

                    // Publish the build information to JFrog Artifactory
                    server.publishBuildInfo buildInfo
                }
            }
        }

        stage('Publish HTML Reports') {
            steps {
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, reportDir: 'target/site', reportFiles: 'index.html', reportName: 'HTML Report'])
            }
        }

        stage('Transfer Artifacts to FTP Server') {
            steps {
                script {
                    sshagent(['your-ssh-credentials-id']) {
                        sh 'scp -o StrictHostKeyChecking=no ./target/helloworldjava-1.4-SNAPSHOT.jar root@192.168.43.52:/home/gowtham/JenkinsWorkspace/'                    }
                }
            }
        }
    }
}
